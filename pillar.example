# vim: ft=yaml
# yamllint disable rule:comments-indentation
---
mariadb:
    # Settings for certificate issuance.
    # The states run only if `config:(mariadb|mysqld)|ssl_(ca|cert|key)`
    # are defined.
  cert:
    ca_server: null
    cn: null
    days_remaining: 7
    days_valid: 30
    intermediate: []
    root: ''
    san: []
    signing_cert: null
    signing_policy: null
    signing_private_key: null
    signing_private_key_passphrase: null
    # Whether to also remove databases when applying clean states.
  clean_databases: false
    # MariaDB configuration. The default configuration of the
    # installation method will be merged as a base.
  config: {}
    # Mapping of database names to settings for this particular database.
    # Supported settings are `character_set` and `collate`.
  databases: {}
    # List of database names that should be removed if present.
    # This will apply regardless of `clean_databases`.
  databases_absent: []
    # Installation settings.
  install:
      # Install the MariaDB client.
    client: true
      # Install Galera packages. This only has an effect on RedHat
      # installation from the system repositories, where the packages
      # are split.
    galera: false
      # Installation method.
      # `pkg` (from system packages) or `repo` (from official repositiories)
    method: pkg
      # Install the MariaDB server.
    server: true
      # MariaDB version to install. This is only respected when the
      # installation method is `repo` and affects the specific repo
      # that will be installed.
    version: '10.11'
    # For RedHat, ensure that MariaDB server and Galera ports are open.
  manage_firewall: false
    # List of users to creation settings. Also contains settings for grants.
    # See example below.
  users: {}
  # - name: foo
  #   socket: true
  #   passwordless: true
  #   grants:
  #     - db: exampledb.*
  #       grants:
  #         - all privileges
  ## also respected: `password_column`, `auth_plugin`
  # - name: bar
  #   host: my.example.host
  #   password_hash: cafebabedabbad00
  #   grants:
  #     - db: exampledb.*
  #       grants:
  #         - select
    # List of user names (for localhost) or dicts with
    # `name` and `host` of users to delete when present.
  users_absent: []
    # This formula also supports managing a user account
    # and the connection to HashiCorp Vault.
    # This can be applied with `mariadb.vault` or,
    # if `init` below is true, by default with `mariadb`.
  vault:
      # Settings regarding the user account Vault will receive
    user:
        # The host the user will be able to connect from
      host: '%'
        # A list of grants for the Vault user
      grants:
            # The databases the privileges will apply to
        - db: '*.*'
            # The privilege to grant
          grant: all privileges
        # Keep managing the user account after the Vault
        # connection has been initialized.
      keep_managing: true
        # The user name
      name: vault
      # The name of the connection in the database secret backend.
    connection_name: mariadb
      # The mount where the database secret backend is mounted.
    database_mount: database
      # Include `mariadb.vault` in the `mariadb` meta state.
    init: false
      # The hostname or IP Vault should connect to.
    mariadb_host: null
      # The port Vault should connect to.
    mariadb_port: null
      # Misc settings for the MySQL secret backend, see its docs.
    max_connection_lifetime: 0s
    max_idle_connections: 0
    max_open_connections: 4
    plugin_version: null
    tls_server_name: ''
    tls_skip_verify: false
    # List of role definitions for the database secret backend.
    # See the example below.
  vault_roles: []
  # - name: examplerole
  #   definition:
  #     - CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';
  #     - GRANT SELECT ON exampledb.* TO '{{name}}'@'%';
  ## the following are optional
  #   revocation:
  #     - DROP USER '{{name}}'@'%';
  #   default_ttl: null
  #   max_ttl: null

  lookup:
    config_defaults:
      pkg:
        client: {}
        client-mariadb: {}
        embedded: {}
        galera: {}
        mysql: {}
        mysql_upgrade: {}
        mysqladmin: {}
        mysqlbinlog: {}
        mysqlcheck: {}
        mysqld: {}
        mysqldump: {}
        mysqlimport: {}
        mysqlshow: {}
        mysqlslap: {}
        server: {}
      repo:
        client: {}
        client-mariadb: {}
        embedded: {}
        galera: {}
        mysql: {}
        mysql_upgrade: {}
        mysqladmin: {}
        mysqlbinlog: {}
        mysqlcheck: {}
        mysqld: {}
        mysqldump: {}
        mysqlimport: {}
        mysqlshow: {}
        mysqlslap: {}
        server: {}
    config_galera:
      binlog_format: ROW
      default_storage_engine: InnoDB
      innodb_autoinc_lock_mode: 2
      innodb_doublewrite: 1
      wsrep_on: 'ON'
    group: mysql
    libgalera:
      pkg: /usr/lib/galera/libgalera_smm.so
      repo: /usr/lib/galera/libgalera_smm.so
    pkg:
      client:
        pkg: mariadb-client
        repo: mariadb-client
      galera:
        pkg: false
        repo: false
      pip: pymysql
      python: python3-mysqldb
      server:
        pkg: mariadb-server
        repo: mariadb-server
    socket:
      pkg: /run/mysqld/mysqld.sock
      repo: /run/mysqld/mysqld.sock
    user: mysql

  tofs:
      # The files_switch key serves as a selector for alternative
      # directories under the formula files directory. See TOFS pattern
      # doc for more info.
      # Note: Any value not evaluated by `config.get` will be used literally.
      # This can be used to set custom paths, as many levels deep as required.
    files_switch:
      - any/path/can/be/used/here
      - id
      - roles
      - osfinger
      - os
      - os_family

      # All aspects of path/file resolution are customisable using the options below.
      # This is unnecessary in most cases; there are sensible defaults.
      # Default path: salt://< path_prefix >/< dirs.files >/< dirs.default >
      # I.e.: salt://mariadb/files/default
      # path_prefix: template_alt
      # dirs:
      #   files: files_alt
      #   default: default_alt
      # The entries under `source_files` are prepended to the default source files
      # given for the state
    source_files:
      MariaDB configuration is managed:
        - 'example_alt.tmpl'
        - 'example_alt.tmpl.jinja'
